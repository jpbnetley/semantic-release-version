name: Build and Push Dist

on:
  push:
    branches:
      - main

jobs:  
  build-and-commit:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write

    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          token: ${{ secrets.GITHUB_TOKEN }}

      - name: Set up pnpm
        uses: pnpm/action-setup@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: pnpm install

      - name: Build project
        run: pnpm run build

      - name: Setup git config
        uses: ./.github/actions/git-user

      - name: Check for changes
        id: git-check
        run: |
          if git status | grep -q modified
          then
            echo 'Changes found; hasModifications true' && echo "hasModifications=true" >> "$GITHUB_OUTPUT"
          else
            echo 'No changes found; hasModifications false' && echo "hasModifications=false"  >> "$GITHUB_OUTPUT"
          fi

      - name: Checkout new branch
        if: steps.git-check.outputs.hasModifications == 'true'
        run: git checkout -b update-dist-${{ github.run_id }}
    
      - name: Commit dist folder
        if: steps.git-check.outputs.hasModifications == 'true'
        run: |
          git checkout -b update-dist-${{ github.run_id }}
          git add dist
          git commit -m "chore: update dist [skip ci]"
        
      - name: Create pull request for dist changes
        if: steps.git-check.outputs.hasModifications == 'true'
        run: gh pr create --base main --head update-dist-${{ github.run_id }} --title "Update dist folder" --body "This PR updates the dist folder with the latest build changes."
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Merge pull request for dist changes
        if: steps.git-check.outputs.hasModifications == 'true'
        run: gh pr merge --auto --squash --delete-branch
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          