name: Tag release

on:
  workflow_dispatch:
    inputs:
      version:
        description: 'Version to update major.minor.patch'
        required: true
        type: choice
        options:
          - patch
          - minor
          - major
    
permissions:
  contents: write

jobs:
  tag-release:
    name: Tag Release
    runs-on: ubuntu-latest
    outputs:
      tag_name: ${{ steps.create-tag-branch.outputs.tag_name }}

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Setup pnpm
        uses: pnpm/action-setup@v4
        with:
          run_install: false

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          cache: 'pnpm'
          node-version: '22'

      - name: Generate branch name
        id: generate-branch-name
        run: echo "branch_name=update-tag-${{ github.run_id }}" >> "$GITHUB_OUTPUT"

      - name: Setup git config
        uses: ./.github/actions/git-user

      - name: Create new branch and push tag
        id: create-tag-branch
        uses: ./.github/actions/git-push-tag-branch
        with:
          branch_name: ${{ steps.generate-branch-name.outputs.branch_name }}
          main_branch: "main"
          GITHUB_PERSONAL_ACCESS_TOKEN: ${{ secrets.GH_PAT }}

      # - name: Wait for tag automerge to complete
      #   uses: ./.github/actions/wait-for-automerge

      - name: Output tag name
        run: |
          echo "Tag created: ${{ steps.create-tag-branch.outputs.tag_name }}" >> $GITHUB_STEP_SUMMARY
          echo "tag_name=${{ steps.create-tag-branch.outputs.tag_name }}" >> "$GITHUB_OUTPUT"

  create-github-release:
    name: Create GitHub Release
    needs: tag-release
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4
        
      - name: Create Github release
        run: |
          gh release create ${{ needs.tag-release.outputs.tag_name }} \
            --title "Release ${{ needs.tag-release.outputs.tag_name }}" \
            --notes "Release notes for version ${{ needs.tag-release.outputs.tag_name }}" \
            --generate-notes
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}